## Modding support
# required to load in the core commands
# recommended to have modding disabled, when the executable itself contains SUID (set UID), controlled by "CanElevate"
# permissions and when it is elevated (running as root / admin), controlled by "IsElevated"
ModdingAllowed = true
ModdingAllowed[CanElevate] = false
ModdingAllowed[IsElevated] = false

# Timeout: The Maximum duration of one connection
# On slower Network speeds, it is recommended to increase the Connection and Read Timeouts.
Network.ConnectionTimeout = 60s
Network.ReadTimeout = 45s
Network.MaximumTries = 3

## Instagram Connectivity related
# Specifies, how many accounts (that you own) you can log into and how many targets you can apply at the same time
# Specifying the amount of maximum target connections allows you to hold connections for other targets
# The values can be bypassed by any plugin that is entered within. The core tool always follows the limits.
Instagram.Accounts.MaximumTargetConnections = 5
Instagram.Accounts.MaximumUserSessions = 3

# Directory on where all the content gets saved under
ContentStorage.DirectoryPath[Windows] = {UserDir}\OsintgramCXX
ContentStorage.DirectoryPath[Linux:NonIsolated] = {UserDir}/.config/OsintgramCXX
ContentStorage.DirectoryPath[Linux:Isolated] = /IsolatedContent

# The folder on where your accounts and target sessions get stored under
# Note: all user accounts are packed into a ZIP file and the whole file content being encrypted with the user password
# use "userctl decrypt [name] [path]" to decrypt your user account file
ContentStorage.AccountStorage = {SaveContent.DirectoryPath}/users
ContentStorage.TargetStorage = {SaveContent.DirectoryPath}/sessions

# r/FuckingAI, am I right
# Defines the archive format used to store session and target content data
# When TargetLockedPerUser is set to true, the archive will be encrypted per authorized user
# This restricts access to the data archive based on the authenticated user's identity
# Encryption is bound to the user's authentication context and cannot be decrypted by others
ContentStorage.TargetFileType = zip
ContentStorage.TargetLockedPerUser = false

# Stores the user information in either:
# partial -> saves usernames and bio
# basic -> saves the user ID, usernames, bio and public content
# full -> the entire Instagram profile dump
ContentStorage.TargetInfo.StoreUserInfo = full

# The format that the content from Instagram gets delivered in
# This value may be overridden by what content gets delivered with (e.g. images, videos, shorts)
# Supports TXT, JSON and CSV
ContentStorage.TextFormat = txt